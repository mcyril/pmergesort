/* -------------------------------------------------------------------------------------------------------------------------- */
/*  pmergesort-mem-sz.inl                                                                                                     */
/* -------------------------------------------------------------------------------------------------------------------------- */
/*  Created by Cyril Murzin                                                                                                   */
/*  Copyright (c) 2015-2017 Ravel Developers Group. All rights reserved.                                                      */
/* -------------------------------------------------------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------------------------------------------------------- */
/*  swap two elements of size                                                                                                 */
/* -------------------------------------------------------------------------------------------------------------------------- */
static inline void _M(swap)(void * a, void * b, size_t sz)
{
    _regions_swap(a, b, sz);
}

/* -------------------------------------------------------------------------------------------------------------------------- */
/*  copy n elements of size                                                                                                   */
/* -------------------------------------------------------------------------------------------------------------------------- */
static inline void _M(copy)(void * src, void * dst, size_t n, size_t sz)
{
    _region_copy(src, dst, ELT_OF_SZ(n, sz));
}

/* -------------------------------------------------------------------------------------------------------------------------- */
/*  move n elements of size sz at base a to the right by m elements (of size sz)                                              */
/* -------------------------------------------------------------------------------------------------------------------------- */
static inline void _M(move_right)(void * a, size_t n, size_t m, size_t sz)
{
    _region_move_right(a, ELT_PTR_(a, m, sz), ELT_OF_SZ(n, sz));
}

/* -------------------------------------------------------------------------------------------------------------------------- */
/*  move n elements of size sz at base a to the left by m elements (of size sz)                                               */
/* -------------------------------------------------------------------------------------------------------------------------- */
static inline void _M(move_left)(void * a, size_t n, size_t m, size_t sz)
{
    _region_move_left(a, ELT_PTR_(a, -m, sz), ELT_OF_SZ(n, sz));
}

/* -------------------------------------------------------------------------------------------------------------------------- */
